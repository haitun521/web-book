######################################
#         log4j配置相关说明
######################################

#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
#%r 输出自应用启动到输出该log信息耗费的毫秒数 
#%c 输出所属的类目，通常就是所在类的全名 
#%t 输出产生该日志事件的线程名
#%m 输出代码中指定的信息 
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921 
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) 

#log4j提供4种布局: 
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息

#log4j中有五级logger 输出级别:
#FATAL 0 
#ERROR 3 
#WARN 4 
#INFO 6 
#DEBUG 7

######################################
#          log4j相关配置
######################################

#日志输出级别
log4j.rootLogger=info,logfile,R

log4j.appender.logfile=org.apache.log4j.FileAppender
log4j.appender.logfile.File=${catalina.base}/logs/book-web-all.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%-5p [%-d{yyyy-MM-dd HH:mm:ss}] [%c] [%x] %m%n

log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
log4j.appender.R.File=${catalina.base}/logs/book-web.log
log4j.appender.R.DatePattern='.'yyyy-MM-dd
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%-5p [%-d{yyyy-MM-dd HH:mm:ss}] [%c] [%x] %m%n


######################################
#       hibernate相关配置
######################################

#输出hibernate调试过程中的错误日志
log4j.logger.org.hibernate=R
#输出HQL查询调试日志
#log4j.logger.org.hibernate.hql.ast.AST=R
#输出SQL语句调试日志
log4j.logger.org.hibernate.SQL=R
#输出 JDBC参数查询的日志
log4j.logger.org.hibernate.type=R
#输出缓存日志 
log4j.logger.org.hibernate.cache=R
#输出事务日志
log4j.logger.org.hibernate.transaction=R
#输出获取JDBC资源日志
#log4j.logger.org.hibernate.jdbc=R